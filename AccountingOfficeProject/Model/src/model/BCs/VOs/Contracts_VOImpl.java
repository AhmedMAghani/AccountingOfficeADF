package model.BCs.VOs;

import java.sql.ResultSet;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.ViewRowSetImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 25 12:08:40 EET 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Contracts_VOImpl extends ViewObjectImpl {
    private RowSetIterator contractItrator;
    private Integer count;

    /**
     * This is the default constructor (do not remove).
     */
    public Contracts_VOImpl() {
    }

    /**
     * executeQueryForCollection - for custom java data source support.
     */
    @Override
    protected void executeQueryForCollection(Object qc, Object[] params, int noUserParams) {
        super.executeQueryForCollection(qc, params, noUserParams);
    }

    /**
     * hasNextForCollection - for custom java data source support.
     */
    @Override
    protected boolean hasNextForCollection(Object qc) {
        boolean bRet = super.hasNextForCollection(qc);
        return bRet;
    }

    /**
     * createRowFromResultSet - for custom java data source support.
     */
    @Override
    protected ViewRowImpl createRowFromResultSet(Object qc, ResultSet resultSet) {
        ViewRowImpl value = super.createRowFromResultSet(qc, resultSet);
        return value;
    }

    /**
     * getQueryHitCount - for custom java data source support.
     */
    @Override
    public long getQueryHitCount(ViewRowSetImpl viewRowSet) {
        long value = super.getQueryHitCount(viewRowSet);
        return value;
    }

    /**
     * getCappedQueryHitCount - for custom java data source support.
     */
    @Override
    public long getCappedQueryHitCount(ViewRowSetImpl viewRowSet, Row[] masterRows, long oldCap, long cap) {
        long value = super.getCappedQueryHitCount(viewRowSet, masterRows, oldCap, cap);
        return value;
    }

    public Integer getTotalContractsNo() {
        clearCache();
        addWhereClause(null);
        executeQuery();
        count = 0;
        contractItrator = createRowSetIterator(null);
        if (!contractItrator.hasNext())
            return count;
        do {
            count++;
            contractItrator.next();
        } while (contractItrator.hasNext());
        return count;
    }

    public Integer getCompletedContractsNo() {
        clearCache();
        setWhereClause("CONTRACT_END_DATE<SYSDATE");
        executeQuery();
        count = 0;
        contractItrator = createRowSetIterator(null);
        if (!contractItrator.hasNext())
            return count;
        do {
            count++;
            contractItrator.next();
        } while (contractItrator.hasNext());
        return count;
    }

    public Integer getIssuedContractsNo() {
        clearCache();
        setWhereClause("CONTRACT_END_DATE>=SYSDATE");
        executeQuery();
        count = 0;
        contractItrator = createRowSetIterator(null);
        if (!contractItrator.hasNext())
            return count;
        do {
            count++;
            contractItrator.next();
        } while (contractItrator.hasNext());
        return count;
    }
}

