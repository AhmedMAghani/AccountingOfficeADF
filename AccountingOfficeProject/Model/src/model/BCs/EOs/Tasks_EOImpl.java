package model.BCs.EOs;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Date;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Mar 27 01:12:01 EET 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class Tasks_EOImpl extends EntityImpl {
    private final Integer TASK_PENDING = 1;
    private final Integer TASK_Completed = 2;
    private final Integer TASK_FAIL = 3;
    private Integer currentTaskStatus;
    private Contracts_EOImpl contractEntity;
    private Key contractPrimaryKey;
    private Date validationDate, currentDate;

    /**
     * Validation method for TaskCompleteDate.
     */
    public boolean validateTaskCompleteDate(Timestamp taskcompletedate) {
        if (taskcompletedate.compareTo(getTaskIssueDate()) <= 0)
            return false;
        return true;
    }

    /**
     * Validation method for TaskState.
     */
    public boolean validateTaskState(BigDecimal taskstate) {
        currentTaskStatus = (Integer) getPostedAttribute(TASKSTATE);
        if (taskstate.intValue() == TASK_Completed &&
            (currentTaskStatus == TASK_FAIL || currentTaskStatus == TASK_PENDING))
            return false;
        else if (taskstate.intValue() == TASK_FAIL &&
                 (currentTaskStatus == TASK_Completed || currentTaskStatus == TASK_PENDING))
            return false;
        else
            return true;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**
     * Validation method for ContractId.
     */
    public boolean validateContractId(BigDecimal contractid) {
        Contracts_EOImpl contractEntity = (Contracts_EOImpl) getContainerEntity();
        contractPrimaryKey = Contracts_EOImpl.createPrimaryKey(contractid);
        Contracts_EOImpl contractRecord =
            (Contracts_EOImpl) contractEntity.getDefinitionObject().findByPrimaryKey(getDBTransaction(),
                                                                                     contractPrimaryKey);
        validationDate = (Date) contractRecord.getAttribute("ContractEndDate");
        currentDate = new Date();
        if (validationDate.compareTo(currentDate) > 0)
            return true;
        return false;
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        TaskId,
        EmpId,
        CompanyId,
        ContractId,
        TaskType,
        TaskState,
        TaskIssueDate,
        TaskCompleteDate,
        OfficeExpencesId,
        OfficeIncomeId,
        Companies,
        Contracts,
        Employees,
        OfficeExpences,
        OfficeIncome;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TASKID = AttributesEnum.TaskId.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int COMPANYID = AttributesEnum.CompanyId.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int TASKTYPE = AttributesEnum.TaskType.index();
    public static final int TASKSTATE = AttributesEnum.TaskState.index();
    public static final int TASKISSUEDATE = AttributesEnum.TaskIssueDate.index();
    public static final int TASKCOMPLETEDATE = AttributesEnum.TaskCompleteDate.index();
    public static final int OFFICEEXPENCESID = AttributesEnum.OfficeExpencesId.index();
    public static final int OFFICEINCOMEID = AttributesEnum.OfficeIncomeId.index();
    public static final int COMPANIES = AttributesEnum.Companies.index();
    public static final int CONTRACTS = AttributesEnum.Contracts.index();
    public static final int EMPLOYEES = AttributesEnum.Employees.index();
    public static final int OFFICEEXPENCES = AttributesEnum.OfficeExpences.index();
    public static final int OFFICEINCOME = AttributesEnum.OfficeIncome.index();

    /**
     * This is the default constructor (do not remove).
     */
    public Tasks_EOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.BCs.EOs.Tasks_EO");
    }


    /**
     * Gets the attribute value for TaskId, using the alias name TaskId.
     * @return the value of TaskId
     */
    public BigDecimal getTaskId() {
        return (BigDecimal) getAttributeInternal(TASKID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskId.
     * @param value value to set the TaskId
     */
    public void setTaskId(BigDecimal value) {
        setAttributeInternal(TASKID, value);
    }

    /**
     * Gets the attribute value for EmpId, using the alias name EmpId.
     * @return the value of EmpId
     */
    public BigDecimal getEmpId() {
        return (BigDecimal) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmpId.
     * @param value value to set the EmpId
     */
    public void setEmpId(BigDecimal value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for CompanyId, using the alias name CompanyId.
     * @return the value of CompanyId
     */
    public BigDecimal getCompanyId() {
        return (BigDecimal) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CompanyId.
     * @param value value to set the CompanyId
     */
    public void setCompanyId(BigDecimal value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for ContractId, using the alias name ContractId.
     * @return the value of ContractId
     */
    public BigDecimal getContractId() {
        return (BigDecimal) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractId.
     * @param value value to set the ContractId
     */
    public void setContractId(BigDecimal value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for TaskType, using the alias name TaskType.
     * @return the value of TaskType
     */
    public BigDecimal getTaskType() {
        return (BigDecimal) getAttributeInternal(TASKTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskType.
     * @param value value to set the TaskType
     */
    public void setTaskType(BigDecimal value) {
        setAttributeInternal(TASKTYPE, value);
    }

    /**
     * Gets the attribute value for TaskState, using the alias name TaskState.
     * @return the value of TaskState
     */
    public BigDecimal getTaskState() {
        return (BigDecimal) getAttributeInternal(TASKSTATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskState.
     * @param value value to set the TaskState
     */
    public void setTaskState(BigDecimal value) {
        setAttributeInternal(TASKSTATE, value);
    }

    /**
     * Gets the attribute value for TaskIssueDate, using the alias name TaskIssueDate.
     * @return the value of TaskIssueDate
     */
    public Timestamp getTaskIssueDate() {
        return (Timestamp) getAttributeInternal(TASKISSUEDATE);
    }


    /**
     * Gets the attribute value for TaskCompleteDate, using the alias name TaskCompleteDate.
     * @return the value of TaskCompleteDate
     */
    public Timestamp getTaskCompleteDate() {
        return (Timestamp) getAttributeInternal(TASKCOMPLETEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaskCompleteDate.
     * @param value value to set the TaskCompleteDate
     */
    public void setTaskCompleteDate(Timestamp value) {
        setAttributeInternal(TASKCOMPLETEDATE, value);
    }

    /**
     * Gets the attribute value for OfficeExpencesId, using the alias name OfficeExpencesId.
     * @return the value of OfficeExpencesId
     */
    public BigDecimal getOfficeExpencesId() {
        return (BigDecimal) getAttributeInternal(OFFICEEXPENCESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OfficeExpencesId.
     * @param value value to set the OfficeExpencesId
     */
    public void setOfficeExpencesId(BigDecimal value) {
        setAttributeInternal(OFFICEEXPENCESID, value);
    }

    /**
     * Gets the attribute value for OfficeIncomeId, using the alias name OfficeIncomeId.
     * @return the value of OfficeIncomeId
     */
    public BigDecimal getOfficeIncomeId() {
        return (BigDecimal) getAttributeInternal(OFFICEINCOMEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OfficeIncomeId.
     * @param value value to set the OfficeIncomeId
     */
    public void setOfficeIncomeId(BigDecimal value) {
        setAttributeInternal(OFFICEINCOMEID, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getCompanies() {
        return (EntityImpl) getAttributeInternal(COMPANIES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setCompanies(EntityImpl value) {
        setAttributeInternal(COMPANIES, value);
    }

    /**
     * @return the associated entity Contracts_EOImpl.
     */
    public Contracts_EOImpl getContracts() {
        return (Contracts_EOImpl) getAttributeInternal(CONTRACTS);
    }

    /**
     * Sets <code>value</code> as the associated entity Contracts_EOImpl.
     */
    public void setContracts(Contracts_EOImpl value) {
        setAttributeInternal(CONTRACTS, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getEmployees() {
        return (EntityImpl) getAttributeInternal(EMPLOYEES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setEmployees(EntityImpl value) {
        setAttributeInternal(EMPLOYEES, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public OfficeExpences_EOImpl getOfficeExpences() {
        return (OfficeExpences_EOImpl) getAttributeInternal(OFFICEEXPENCES);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setOfficeExpences(OfficeExpences_EOImpl value) {
        setAttributeInternal(OFFICEEXPENCES, value);
    }

    /**
     * @return the associated entity OfficeIncome_EOImpl.
     */
    public OfficeIncome_EOImpl getOfficeIncome() {
        return (OfficeIncome_EOImpl) getAttributeInternal(OFFICEINCOME);
    }

    /**
     * Sets <code>value</code> as the associated entity OfficeIncome_EOImpl.
     */
    public void setOfficeIncome(OfficeIncome_EOImpl value) {
        setAttributeInternal(OFFICEINCOME, value);
    }

    /**
     * @param taskId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal taskId) {
        return new Key(new Object[] { taskId });
    }


}

